
'number' + 3 + 3 // // 'number' + 3 — при додаванні числа до рядка, число перетворюється на рядок.
// Результат: 'number3'

// 'number3' + 3 — знову додавання числа до рядка, число перетворюється на рядок.
// Результат: number33

null + 3 // null + 3 — null перетворюється на 0.
// Результат: 0 + 3 = 3

// результат: 3

5 && "qwerty" //  && повертає другий операнд, якщо перший є true.
// Число 5 є true, тому результатом буде "qwerty".

//  результат: "qwerty"

+'40' + +'2' + "hillel"; // +'40' — унарний плюс перетворює рядок '40' у число 40.
// +'2' — унарний плюс перетворює рядок '2' у число 2.
// Результат: 40 + 2 = 42

//  42 + "hillel" — при додаванні числа до рядка, число перетворюється на рядок.
// Результат: '42hillel'



'10' - 5 === 6; //  '10' - 5 — при відніманні рядок '10' автоматично перетворюється у число 10. тому 10 - 5 = 5

//  5 === 6 — порівнюємо 5 і 6 . Вони не рівні. Результат: false

true + false //  true + false — булеві значення перетворюються на числа (true → 1, false → 0).
// Результат: 1 + 0 = 1

'4px' - 3 //  '4px' - 3 — при відніманні рядок '4px' не може бути перетворений через присутність літер.
// Результат: NaN (Not-a-Number)


'4' - 3 //  '4' - 3 — при відніманні рядок '4'  перетворюється у число 4.
// Результат: 4 - 3 = 1


'6' + 3 ** 0; //  3 ** 0 — обчислення ступеня. Будь-яке число у ступені 0 дорівнює 1.
// '6' + 1 — при додаванні числа до рядка, число перетворюється на рядок.
// Результат: '61'

12 / '6' // '6' — рядок перетворюється у число 6 при діленні.
// Результат: 12 / 6 = 2

'10' + (5 === 6); //5 === 6 — строге порівняння. результат: false.
// '10' + false — при додаванні булевого значення до рядка, булеве значення перетворюється  ('false').
// Результат: '10false'

null == '' // при нестрогому порівнянні null  дорівнює лише null та undefined. тому результат: false

3 ** (9 / 3);//9 / 3 — Результат: 3.
// 3 ** 3 — обчислення ступеня: 27.

!!'false' == !!'true'// !!'false' — подвійне заперечення перетворює рядок 'false' у булеве значення true
//  !!'true' перетворюється у true.
//true == true — Вони рівні. Результат: true

0 || '0' && 1// Спершу обчислюємо '0' && 1 , true && 1 = 1, повертає останній операнд.
//  Тепер обчислюємо 0 || 1. 0 є false, тому повертається перший true операнд 1.

(+null == false) < 1; //+null — унарний плюс перетворює null у 0.
//  0 == false — 0 і false вважаються рівними. Результат: true
//  true < 1 — булеве значення true перетворюється у 1.
// Результат: 1 < 1 = false

false && true || true // false && true — і повертає перше false значення. 
//  false || true — або повертає перше true значення. результат: true

false && (false || true); // false || true — або повертає перше true значення. 
// false && true — і повертає перше false значення. Результат: false.

(+null == false) < 1 ** 5;// +null — унарний плюс перетворює null у 0.
//  0 == false —  0 і false вважаються рівними.Результат: true
//  1 ** 5 — обчислення ступеня. Результат: 1.
//  true < 1 — булеве значення true перетворюється у 1.
// Результат: 1 < 1 = false
